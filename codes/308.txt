/* File copied from github.com/httpstatuses/httpstatuses [566cc03 on May 16, 2022] */

---
set: 3
code: 308
title: Permanent Redirect
references:
    ".NET HTTP Status Enum": "HttpStatusCode.PermanentRedirect"
    "Rust HTTP Status Constant": "http::StatusCode::PERMANENT_REDIRECT"
    "Symfony HTTP Status Constant": "Response::HTTP_PERMANENTLY_REDIRECT"
---

### Permanent Redirect

The target resource has been assigned a new permanent URI and any future references to this resource ought to use one of the enclosed URIs.

Clients with link editing capabilities ought to automatically re-link references to the effective request URI<sup>[1](#ref-1)</sup> to one or more of the new references sent by the server, where possible.

The server SHOULD generate a Location header field<sup>[2](#ref-2)</sup> in the response containing a preferred URI reference for the new permanent URI. The user agent MAY use the Location field value for automatic redirection. The server's response payload usually contains a short hypertext note with a hyperlink to the new URI(s).

A 308 response is cacheable by default; i.e., unless otherwise indicated by the method definition or explicit cache controls<sup>[3](#ref-3)</sup>.

Note: This status code is similar to [301 Moved Permanently](/301), except that it does not allow changing the request method from POST to GET.

### Resume Incomplete

Some applications may use 308 Resume Incomplete as a non-standard response.

This status code indicates to the client that the server does not possess the
complete byte range for the resume request to proceed but is still
willing to continue the operation.
It may include a Range header so that the client may minimize the amount
of data that needs to be retransmitted by the ensuing resume requests.
In the absence of any such Range header, the client should assume that
the server has no stored bytes.
It may include a Location header indicating the URI to which future
resumable requests should be sent for this operation.

---

* <span id="ref-1"><sup>1</sup> Effective Request URI [RFC7230 Section 5.5][2]</span>
* <span id="ref-2"><sup>2</sup> Location [RFC7231 Section 7.1.2][3]</span>
* <span id="ref-3"><sup>3</sup> Calculating Heuristic Freshness [RFC7234 Section 4.2.2][4]</span>
* Sources:
  * [RFC738 Section 3][1]
  * [Resumable HTTP requests](5)

[1]: <https://tools.ietf.org/html/rfc7538#section-3>
[2]: <https://tools.ietf.org/html/rfc7230#section-5.5>
[3]: <https://tools.ietf.org/html/rfc7231#section-7.1.2>
[4]: <https://tools.ietf.org/html/rfc7234#section-4.2.2>
[5]: <https://web.archive.org/web/20151013212135/http://code.google.com/p/gears/wiki/ResumableHttpRequestsProposal#Status_Code:_308_Resume_Incomplete>
